class BaseLevel //<>//
{

  EnemyGrid enemys;

  //ArrayList<Enemy> enemys = new ArrayList<Enemy>();

  int scale = 10;  

  int cols = width/scale;
  int rows = height/scale;

  //kan fjernes
  int hej = 0;

  BaseLevel()
  {
    enemys = new EnemyGrid();
    enemys.enemys[cols/2][rows/2].strength = 10000;
    enemys.enemys[cols-1][rows-1].strength = 10000;
    enemys.enemys[cols-1][0].strength = 10000;
    enemys.enemys[0][rows-1].strength = 10000;
    enemys.enemys[0][0].strength = 10000;    
    //enemys.add(new Enemy(new PVector((cols/2), (rows/2))));
    //enemys.add(new Enemy(new PVector(0, 0)));
    //enemys.get(0).addLayer(100000);
    //enemys.get(1).addLayer(10000);
    //println("enemy "+0+" strength "+enemys.get(0).strength +" " + enemys.get(0).location);
  }


  void fieldDraw() {   
    //this draws the stuff
    //Maybe an array of variables would have been better
    // Begin loop for columns
    for (int i = 0; i < cols; i++) {
      // Begin loop for rows
      for (int j = 0; j < rows; j++) {
        int x = i*scale;
        int y = j*scale;
        fill(255);
        stroke(0);
        strokeWeight(1);
        rect(x, y, scale, scale);
      }
    }
  }

  void Draw()
  {
    fieldDraw();
  }

  void Update()
  {
    int hej = 0;

    for (int i = 0; i < cols; i++) {
      for (int j = 0; j < rows; j++) {
        if (enemys.enemys[i][j].strength >= 5) {

          if (enemys.enemys[i][j].strength < enemys.enemys[i][j - 1].strength && enemys.enemys[i][j].strength < enemys.enemys[i][j + 1].strength && enemys.enemys[i][j].strength < enemys.enemys[i -1][j].strength && enemys.enemys[i][j].strength < enemys.enemys[i + 1][j].strength) {
            enemys.addToAjesent(i, j);
            enemys.spawnAjesent(i, j);
            hej += enemys.enemys[i][j].strength;
          }
        }
      }
    }
    println(hej);
  }

  void Run()
  {

    Update();
    Draw();
    hej++;
    for (int i = 0; i < cols; i++) {
      for (int j = 0; j < rows; j++) {
        enemys.Run(i, j);
      }
    }
    //if (hej >= 20) {exit();}
  }
}
